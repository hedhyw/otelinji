# https://taskfile.dev

version: "3"

vars:
  GOLANGCI_LINT_VER: v1.59.1
  GHERKIN_LINT_VER: 1.2.2

tasks:
  check:
    desc: "Run all checks."
    deps: ["test", "lint", "lint:gherkin"]

  test:
    desc: "Run tests."
    vars:
      COVERPACKAGES:
        sh:
          go list ./... |
          grep -Ev 'vendor|features' |
          tr '\n' ','
    cmds:
      - go test
        -covermode=count
        -coverprofile=coverage.out
        -coverpkg={{.COVERPACKAGES}}
        ./...
      - go tool cover -func=coverage.out

  lint:
    desc: "Lint the code"
    cmds:
      - docker run --rm
        --network none
        --volume "{{.PWD}}:/app:ro"
        --workdir /app
        golangci/golangci-lint:{{.GOLANGCI_LINT_VER}}
        golangci-lint run ./...
    sources:
      - ./**/*.go
      - .golangci.yml

  lint:gherkin:
    desc: "Lint gherkin"
    cmds:
      - docker run --rm
        --interactive
        --volume "{{.PWD}}:/src"
        --workdir "/src"
        --network none
        gherkin/lint:{{.GHERKIN_LINT_VER}} ./internal/features/*.feature

  vendor:
    desc: "Vendor and tidy"
    cmds:
      - go mod tidy
      - go mod vendor

  run:
    desc: "Run command. Example: `task run -- --help`"
    cmds:
      - go run cmd/otelinji/main.go {{.CLI_ARGS}}

  build:
    desc: "Build the application."
    vars:
      VERSION:
        sh: git describe --tags
    cmds:
      - go build 
        --ldflags "-s -w -X main.version={{.VERSION}}"
        -o ./bin/otelinji cmd/otelinji/main.go
